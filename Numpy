#numpy+scipy+matplotlib = Matlab
import numpy as np

#对角矩阵
eye = np.eye(4)

#n维矩阵
init = np.zeros((3,4))
One_D = np.array(([1,2,3,4,5]))
Two_D = np.array(([3,4], [5,6])) /  Two_D = np.array([(3,4),(5,6)])
Three_D = np.zeros((1,3,4))
Four_D = np.zeros((1,2,3,4))

# add type of ndarray
dtype_Two_D = np.array([(1,2),(3,4),(5,6)], dtype = 'int/float/complex') 
row = dtype_Two_D.shape[0]
column = dtype_Two_D.shape[1]

numpy.array和numpy.asarray用法相同

#ndim exchange, 一维转化为三维 
One_D = np.array(([1,2,3,4,5,6]))
a = One_D.reshape(3,1,2)

#3维的1行2列 转化为 3维的2行1列
a.shape =  (3,2,1)  

#切片
a = np.arange(10)[slice(2,7,2)]
>>>[2,4,6]
a = np.array([[1,2,3],[3,4,5],[4,5,6]])  
print(a)
print (a[:,1])   # 第2列元素
print (a[1,:])   # 第2行元素
print (a[1:])  # 第2列及剩下的所有元素


#高级索引
x = np.array([[1,  2],  [3,  4],  [5,  6]]) 
y = x[[0,1,2], [0,1,0]]  #获取的是(0,0), (1,1), (2,0)位置的元素

x = np.array([[  0,  1,  2],[  3,  4,  5],[  6,  7,  8],[  9,  10,  11]])  
rows = np.array([[0,0],[3,3]]) 
cols = np.array([[0,2],[0,2]])
y = x[rows,cols] #获取四个角的元素

a = np.array([[1,2,3], [4,5,6],[7,8,9]])
b = a[1:3, 1:3] 等同 c = a[1:3,[1,2]]
d = a[...,1:]   


#字符串
split(); strip(); join(); replace(); 


#图片变化
import matplotlib.pyplot as plt
a = plt.imread(r'C:/Users/yange.UTCCGL/Desktop/1.png')
plt.imshow(a)
print(a.shape)

import matplotlib.pyplot as plt
a = plt.imread('C:/Users/yange.UTCCGL/Desktop/numpy.png')
plt.imshow(a)
print(a.shape)
print(a)
t = a.copy()
t[:,:,0:1] = 0
t[:,:,2:3] = 0
plt.imshow(t)
# print(t.shape)
# b=np.array([0.299,0.587,0.114])
# x=np.dot(a[:,:,0:3],b) # 将上面的RGB和b数组中的每个元素进行对位相乘，再相加，一定得到的是一个数字L
# plt.imshow(x,cmap="gray")

x=np.ones(shape=(100,200,3))#白色图像，rgb[1,1,1]
x=np.zeros(shape=(100,200,3))#黑色色图像，rgb[0,0,0]
x=np.full(shape=(100,200,3),fill_value=148)#rgb[255,255,255]
plt.imshow(x)
