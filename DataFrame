#https://www.plus2net.com/python/pandas-dataframe-sum.php
#对DataFrame进行列/行的求和
import pandas as pd
test  = {'Name':['AA','BB','CC','DD','EE','FF'],'ID':[1,2,3,4,5,6],'Math':[50,60,70,80,90,100],'English':[80,90,80,70,100,70]}
pd_test = pd.DataFrame(test)

print（pd_test）
>>>>>>>>> output
  Name  ID  Math  English
0   AA   1    50       80
1   BB   2    60       90
2   CC   3    70       80
3   DD   4    80       70
4   EE   5    90      100
5   FF   6   100       70

print(pd.sum())  #按照列进行求和，axis=0(default)
>>>>>>>>> output
Name       AABBCCDDEEFF
ID                   21
Math                450
English             490

print(pd.sum(axis = 1)) #按照行进行求和
>>>>>>>>> output
0    131
1    152
2    153
3    154
4    195
5    176


#DataFrame多列排序  https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.sort_values.html
data.sort_values(....)
eg:
import pandas as pd
import numpy as np
df = pd.DataFrame({
    'col1': ['A', 'A', 'B', np.nan, 'D', 'C'],
    'col2': [2, 1, 9, 8, 7, 4],
    'col3': [0, 1, 9, 4, 2, 3],
    'col4': ['a', 'B', 'c', 'D', 'e', 'F']
})
print(df.sort_values(by=['col1']))
>>>  col1  col2  col3 col4
0    A     2     0    a
1    A     1     1    B
2    B     9     9    c
5    C     4     3    F
4    D     7     2    e
3  NaN     8     4    D

df.sort_values(by=['col1', 'col2'])
>>> col1  col2  col3 col4
1    A     1     1    B
0    A     2     0    a
2    B     9     9    c
5    C     4     3    F
4    D     7     2    e
3  NaN     8     4    D

.....



Dataframe 获取行列值,函数包括：loc和iloc
1. loc只能用index和column索引名
2. iloc只能用数字索引
If 行是数字索引，列是索引名，选用df['colunm_name'].loc[0] #先列后行
